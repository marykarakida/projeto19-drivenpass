generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  password   String
  createdAt  DateTime     @default(now()) @db.Timestamp(6)
  Credential Credential[]
  Note       Note[]
  Card       Card[]

  @@map("users")
}

model Credential {
  id        Int      @id @default(autoincrement())
  ownerId   Int
  title     String
  url       String
  username  String
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  User      User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ownerId, title])
  @@map("credentials")
}

model Note {
  id        Int      @id @default(autoincrement())
  ownerId   Int
  title     String
  note      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  User      User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ownerId, title])
  @@map("notes")
}

enum CardType {
  credit
  debit
  both

  @@map("cardTypes")
}

model Card {
  id             Int      @id @default(autoincrement())
  ownerId        Int
  title          String
  number         String
  cardHolderName String
  expirationDate String
  securityCode   String
  password       String
  isVirtual      Boolean
  type           CardType
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  User           User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ownerId, title])
  @@map("cards")
}
