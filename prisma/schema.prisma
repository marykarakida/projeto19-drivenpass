generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  Credentials Credentials[]
  Notes       Notes[]
  Cards       Cards[]
}

model Credentials {
  id        Int      @id @default(autoincrement())
  ownerId   Int
  title     String
  url       String
  username  String
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  Users     Users    @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ownerId, title])
}

model Notes {
  id        Int      @id @default(autoincrement())
  ownerId   Int
  title     String
  note      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  Users     Users    @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ownerId, title])
}

enum CardType {
  credit
  debit
  both
}

model Cards {
  id             Int      @id @default(autoincrement())
  ownerId        Int
  title          String
  number         String
  cardHolderName String
  expirationDate String
  securityCode   String
  password       String
  isVirtual      Boolean
  type           CardType
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  Users          Users    @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ownerId, title])
}
